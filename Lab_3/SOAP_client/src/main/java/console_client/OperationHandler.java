package console_client;

import wsdl_autogenerated.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class OperationHandler {

    public OperationHandler(PersonService personService) {
        this.personService = personService;
        this.inputReader = new ConsoleInputReader();
    }

    ConsoleInputReader inputReader;
    PersonService personService;

    public void operationSelectDialog() throws ServerException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Select operation: \n"
                + "\t1 - search\n" +
                "\t2 - add\n" +
                "\t3 - delete\n" +
                "\t4 - update\n" +
                "\t5 - exit\n");
        try {
            int choice = Integer.parseInt(reader.readLine());
            switch (choice){
                case 1:
                    selectQuery();
                    break;
                case 2:
                    insertQuery();
                    break;
                case 3:
                    deleteQuery();
                    break;
                case 4:
                    updateQuery();
                    break;
                case 5:
                    System.exit(0);
                default:
                    throw new IllegalStateException("Unexpected value: " + choice);
            }
        } catch (IOException ioException){
            System.out.println("IO Exception!");
            System.exit(-1);
        } catch (NumberFormatException |
                IllegalStateException illegalStateException){
            System.out.println("Incorrect choice! Please try again");
            operationSelectDialog();
        }
    }

    public void selectQuery() throws ServerException{
        Person query = inputReader.readSearchInput();
        PersonArray persons = personService.getPersonWebServicePort().selectPersons(query);
        for (Person person : persons.getItem()) {
            System.out.println("name: " + person.getName() +
                    ", surname: " + person.getSurname() + ", age: " + person.getAge() +
                    ", country: " + person.getCountry() + ", gender: " + person.getGender());
        }
        System.out.println("Total persons: " + persons.getItem().size());
    }

    public void insertQuery() throws ServerException{
        Person query = inputReader.readInsertInput();
        String result = personService.getPersonWebServicePort().insertPerson(query);
        if (result != null)
            System.out.println(result);
        else
            System.out.println("Server error");
    }

    public void updateQuery() throws ServerException{
        int id = inputReader.readNum("Enter the ID of the person you want to change");
        System.out.println("Insert updated information");
        Person newPerson = inputReader.readInsertInput();
        String result = personService.getPersonWebServicePort().updatePersonByID(id, newPerson);
        if (result != null)
            System.out.println(result);
        else
            System.out.println("Server error");
    }

    public void deleteQuery() throws  ServerException {
        int id = inputReader.readNum("Enter the ID of the person you want to delete");
        String result = personService.getPersonWebServicePort().deletePersonByID(id);
        if (result != null)
            System.out.println(result);
        else
            System.out.println("Server error");
    }
}
